[project]
name = "interpretabilityworkbench"
version = "0.1.0"
description = "Interactive Mechanistic-Interpretability Workbench for LLMs"
authors = [
    {name = "InterpretabilityWorkbench Team"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["machine-learning", "interpretability", "sparse-autoencoders", "transformers"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core ML dependencies
    "torch>=2.0.0",
    "transformers>=4.35.0",
    "pytorch-lightning>=2.1.0",
    "safetensors>=0.4.0",
    
    # Data handling
    "datasets>=2.14.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "pyarrow>=13.0.0",
    
    # Web framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "pydantic>=2.5.0",
    
    # CLI
    "click>=8.1.0",
    "tqdm>=4.65.0",
    
    # Visualization (for future UI components)
    "plotly>=5.17.0",
    
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    
    # Model quantization and optimization
    "bitsandbytes>=0.41.0",
    "peft>=0.6.0",
    
    # Hugging Face integration
    "huggingface-hub>=0.16.0",
    
    # Utilities
    "pathlib",
    "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.26.0",
]

ui = [
    # For when we add React UI building tools
    "nodejs>=18.0.0",  # This would be handled separately
]

[project.scripts]
microscope = "interpretability_workbench.cli:main"
iwb-server = "interpretability_workbench.server.api:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["interpretability_workbench"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | ui/
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["interpretabilityworkbench"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "transformers.*",
    "datasets.*",
    "pytorch_lightning.*",
    "safetensors.*",
    "pyarrow.*",
    "plotly.*",
    "bitsandbytes.*",
    "peft.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
]
